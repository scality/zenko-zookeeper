apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "zookeeper.fullname" . }}
  labels:
    app: {{ include "zookeeper.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  serviceName: {{ template "zookeeper.fullname" . }}-headless
  replicas: {{ .Values.servers }}
  template:
    metadata:
      labels:
        app: {{ include "zookeeper.name" . | quote }}
        release: {{ .Release.Name | quote }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9141"
    spec:
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
      containers:
      - name: {{ template "zookeeper.name" . }}-server
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        image: "{{ .Values.Image }}:{{ .Values.ImageTag }}"
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name : ZOO_REPLICAS
          value: "{{ .Values.servers }}"
        - name : ZOO_HEAP_SIZE
          value: "{{ .Values.heap }}"
        - name : ZOO_TICK_TIME
          value: "{{ .Values.tickTimeMs }}"
        - name : ZOO_INIT_LIMIT
          value: "{{ .Values.initTicks }}"
        - name : ZOO_SYNC_LIMIT
          value: "{{ .Values.syncTicks }}"
        - name : ZOO_MAX_CLIENT_CNXNS
          value: "{{ .Values.clientCnxns }}"
        args:
        - zkServer.sh
        - start-foreground
        readinessProbe:
          exec:
            command:
            - "zkOk.sh"
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.probeTimeoutSeconds }}
        livenessProbe:
          exec:
            command:
            - "zkOk.sh"
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.probeTimeoutSeconds }}
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
          subPath: data
      {{- if eq .Values.security.enabled true }}
      securityContext:
        runAsUser: {{ .Values.security.runAsUser }}
        fsGroup: {{ .Values.security.fsGroup }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.storage }}
      {{- if .Values.storageClass }}
      storageClassName: {{ .Values.storageClass | quote }}
      {{- end }}
